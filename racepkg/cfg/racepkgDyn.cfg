#!/usr/bin/env python
PACKAGE = "racepkg"
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# int_t, float_t, str_t, bool_t 
#'name', 'type', 'level', 'description', 'default', 'min', 'max'
gen.add("logging_prediction_results", bool_t, 0, "logging prediction results", False)
gen.add("logging_vehicle_states", bool_t, 0, "logging_vehicle_states", False)
gen.add("clear_buffer", bool_t, 0, "Clear logging buffer", True)
# gen.add("modelbased_pure_puresuit_turn_on", bool_t, 0, "enable Model based Purepursuit", False)

predictr_type = gen.enum([ gen.const("nosimtsGP",      int_t, 0, "DKL predictor"),
                       gen.const("CAV",     int_t, 1, "CAV predictor"),
                       gen.const("NMPC",      int_t, 2, "GT MPCC predictor"),
                       gen.const("NaiveGP", int_t, 3, "GP Predictor"),
                       gen.const("simtsGP",      int_t, 4, "A large constant"),
                       gen.const("multipathpp",      int_t, 5, "A large constant")],
                     "An enum to set size")

gen.add("predictor_type", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 5, edit_method=predictr_type)

exit(gen.generate(PACKAGE, "racepkg", "racepkgDyn"))